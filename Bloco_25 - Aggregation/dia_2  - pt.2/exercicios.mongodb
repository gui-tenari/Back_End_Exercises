// 1. Utilize uma combinação das expressões aritméticas e adicione um campo chamado idade à coleção clientes . 

db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor:{
            $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365] }
          ]
        }
      }
    }
  }
]);

// 2. Utilizando o novo campo idade , conte quantos clientes têm entre 18 e 25 anos.

db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor:{
            $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365] }
          ]
        }
      }
    }
  },
  {
    $match: {
      idade: {
        $gt: 18,
        $lt: 25
      }
    }
  },
  {
    $count: "totalClientes"
  }
]);

// 3. Remova os estágios $count e $match do exercício anterior e adicione um estágio no pipeline que coloque as compras do cliente no campo compras .

db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor:{
            $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365] }
          ]
        }
      }
    }
  },
  {
    $lookup: {
    from: 'vendas',
    localField: 'clienteId',
    foreignField: 'clienteId',
    as: 'compras'
    }
  }
]);

// 4. Selecione TODOS os clientes que compraram entre Junho de 2019 e Março de 2020 .

db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor:{
            $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365] }
          ]
        }
      }
    }
  },
  {
    $lookup: {
    from: 'vendas',
    localField: 'clienteId',
    foreignField: 'clienteId',
    as: "compras",
    }
  },
  {
    $match: {
      "compras.dataVenda": {
        $gte: ISODate("2019-06-01"),
        $lte: ISODate("2020-03-01")
      }
    }
  }
]).itcount();

// 5. Confira o número de documentos retornados pelo pipeline com o método itcount() . Até aqui, você deve ter 486 documentos sendo retornados.

// 6. Ainda nesse pipeline , descubra os 5 estados com mais compras.

db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor:{
            $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365] }
          ]
        }
      }
    }
  },
  {
    $lookup: {
    from: 'vendas',
    localField: 'clienteId',
    foreignField: 'clienteId',
    as: "compras",
    }
  },
  {
    $match: {
      "compras.dataVenda": {
        $gte: ISODate("2019-06-01"),
        $lte: ISODate("2020-03-01")
      }
    }
  },
  {
    $group: {
      _id: "$endereco.uf",
      totalCompras: { $sum: 1 },
    }
  },
  {
    $sort: {
      totalCompras: -1,
    }
  }
])